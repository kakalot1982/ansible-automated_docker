---
# NOTE Ansible 2.x has serious issue with dynamic include handlers
# Until this get fixed. We have to use main.yml as all-in-one handlers
# https://github.com/ansible/ansible/issues/13485

# Need to use ansible_python_interpreter: python to make it work with
# docker-py on virtualenv on local machine
- name: Restart container
  docker_container:
    name: "{{ automated_docker_run.name }}"
    restart: true
    state: started
  environment: "{{ automated_docker_machine_environment | default({}) }}"
  vars:
    ansible_python_interpreter: python


# Handlers for Nginx container
- name: Check nginx configuration and reload nginx
  command: nginx -t
  delegate_to: "{{ automated_docker_run.name }}"
  notify: Reload nginx

# NOTE Should use docker_container module instead
- name: Reload nginx
  command: "docker kill -s HUP {{ automated_docker_run.name }}"
  environment: "{{ automated_docker_machine_environment | default({}) }}"
  vars:
    ansible_python_interpreter: python


# Handlers for HAProxy container
- name: Check HAProxy configuration and reload HAProxy
  command: |
    docker run --rm=true --name haproxy-syntax-check \
    --volumes-from "{{ automated_docker_run.name }}"
    "{{ automated_docker_run.image }}" \
    haproxy -c -f "{{ automated_docker_haproxy_container_config_path }}"
  environment: "{{ automated_docker_machine_environment | default({}) }}"
  vars:
    ansible_python_interpreter: python
  notify: Reload HAProxy container

- name: Reload HAProxy container
  shell: |
    docker start "{{ automated_docker_run.name }}" && \
    docker kill -s HUP "{{ automated_docker_run.name }}"
  environment: "{{ automated_docker_machine_environment | default({}) }}"
  vars:
    ansible_python_interpreter: python
